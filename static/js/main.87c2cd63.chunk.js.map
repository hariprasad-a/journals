{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Styles","styled","div","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","React","useState","value","setValue","onChange","useAsyncDebounce","undefined","class","e","target","placeholder","style","fontSize","border","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","SelectColumnFilter","id","options","useMemo","Set","forEach","row","add","values","map","option","i","defaultPropGetter","Table","columns","data","getHeaderProps","getColumnProps","getRowProps","getCellProps","filterTypes","text","rows","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","minWidth","width","maxWidth","Filter","useTable","initialState","pageIndex","useFilters","useGlobalFilter","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","state","visibleColumns","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","headerGroup","getHeaderGroupProps","headers","className","render","canFilter","colSpan","height","textAlign","cells","cell","colspan","onClick","disabled","type","defaultValue","Number","ranking","scopus","App","Header","accessor","Cell","require","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87c2cd63.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce, usePagination} from 'react-table'\n\nconst Styles = styled.div`\n  .table {\n    table-layout:fixed;\n  }\n\n  i {\n    font-size: 1rem !important;\n  }\n\n  .table tr {\n    border-radius: 20px;\n  }\n\n  tr td:nth-child(n+4),\n  tr th:nth-child(n+4) {\n    border-radius: 0 .625rem .625rem 0;\n  }\n\n  tr td:nth-child(1),\n  tr th:nth-child(1) {\n    border-radius: .625rem 0 0 .625rem;\n  }\n\n  tr td:nth-child(n+5), {\n    textAlign: 'center'\n  }\n\n  td[colspan]:not([colspan=\"1\"]) {\n    text-align: center;\n  }\n\n  .title {\n    width: 450px;\n    height: 60px;\n    padding-left: 0.75rem;\n    padding-right: 0.75rem;\n  }\n\n  .publisher {\n    width: 450px;\n    height: 60px;\n    padding-left: 0.75rem;\n    padding-right: 0.75rem;\n  }\n\n  .ranking {\n    maxWidth: 5px;\n    height: 60px;\n    padding: 0.75rem;\n    text-align: center;\n    font-weight: bold;\n  }\n\n  .scopus {\n    maxWidth: 5px;\n    height: 60px;\n    padding: 0.75rem;\n    text-align: center;\n  }\n\n`\n\n// Define a default UI for filtering\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n}) {\n  const count = preGlobalFilteredRows.length\n  const [value, setValue] = React.useState(globalFilter)\n  const onChange = useAsyncDebounce(value => {\n    setGlobalFilter(value || undefined)\n  }, 200)\n\n  return (\n    <span>\n      Search:{' '}\n      <input\n        class=\"border border-gray-800 focus:border-blue-500 rounded w-full py-2 px-3 mr-4 text-black\"\n        value={value || \"\"}\n        onChange={e => {\n          setValue(e.target.value);\n          onChange(e.target.value);\n        }}\n        placeholder={`${count} records...`}\n        style={{\n          fontSize: '1.1rem',\n          border: '0',\n        }}\n      />\n    </span>\n  )\n}\n\n// Define a default UI for filtering\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length\n\n  return (\n    <div class=\"relative inline-block w-full text-blue-700\">\n    <input\n      class=\"border border-gray-800 focus:border-blue-500 rounded w-full py-2 px-3 mr-4 text-black\"\n      value={filterValue || ''}\n      onChange={e => {\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n      }}\n      placeholder={`Search ${count} records...`}\n    />\n    </div>\n  )\n}\n\n// This is a custom filter UI for selecting\n// a unique option from a list\nfunction SelectColumnFilter({\n  column: { filterValue, setFilter, preFilteredRows, id },\n}) {\n  // Calculate the options for filtering\n  // using the preFilteredRows\n  const options = React.useMemo(() => {\n    const options = new Set()\n    preFilteredRows.forEach(row => {\n      options.add(row.values[id])\n    })\n    return [...options.values()]\n  }, [id, preFilteredRows])\n\n  // Render a multi-select box\n  return (\n    <div class=\"relative inline-block w-full text-blue-700\">\n    <select\n      class=\"bg-blue-50 hover:bg-blue-100 text-blue-800 py-1 px-4 border border-blue-400 rounded shadow\"\n      value={filterValue}\n      onChange={e => {\n        setFilter(e.target.value || undefined)\n      }}\n    >\n      <option value=\"\">All</option>\n      {options.map((option, i) => (\n        <option key={i} value={option}>\n          {option}\n        </option>\n      ))}\n    </select>\n    </div>\n  )\n}\n\nconst defaultPropGetter = () => ({})\n\n// Our table component\nfunction Table({ columns, data, getHeaderProps = defaultPropGetter,\n  getColumnProps = defaultPropGetter,\n  getRowProps = defaultPropGetter,\n  getCellProps = defaultPropGetter }) {\n  const filterTypes = React.useMemo(\n    () => ({\n      text: (rows, id, filterValue) => {\n        return rows.filter(row => {\n          const rowValue = row.values[id]\n          return rowValue !== undefined\n            ? String(rowValue)\n                .toLowerCase()\n                .startsWith(String(filterValue).toLowerCase())\n            : true\n        })\n      },\n    }),\n    []\n  )\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      minWidth: 5,\n      width: 150,\n      maxWidth: 400,\n      Filter: DefaultColumnFilter,\n    }),\n    []\n  )\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    state,\n    visibleColumns,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,    \n    state: { pageIndex },\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn, // Be sure to pass the defaultColumn option\n      filterTypes,\n      initialState: { pageIndex: 0 },\n    },\n    useFilters, // useFilters!\n    useGlobalFilter, // useGlobalFilter!\n    usePagination\n  )\n\n  return (\n    <div class=\"flex items-start justify-center min-h-screen bg-gray-900\">\n    <div class=\"col-span-12\">\n    <div class=\"text-indigo-500 text-center text-5xl font-bold py-8\">Journals</div>\n    <div class=\"overflow-auto lg:overflow-visible \">\n      <table class=\"table-fixed table text-gray-400 border-separate space-y-6 text-sm min-h-full max-h-full \" {...getTableProps()}>\n        <thead class=\"my-12 bg-gray-800 text-gray-500\">\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th class=\"p-3 \" {...column.getHeaderProps([\n                  {\n                    className: column.className,\n                    style: column.style,\n                  },\n                  getColumnProps(column),\n                  getHeaderProps(column),\n                  ])}>\n                  {column.render('Header')}\n                  {/* Render the columns filter UI */}\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\n                </th>\n              ))}\n            </tr>\n          ))}\n          <tr>\n            <th class=\"p-3\"\n              colSpan={visibleColumns.length}\n              style={{\n                width: '200px',height: '60px',\n                textAlign: 'left',\n              }}\n            >\n              <GlobalFilter\n                preGlobalFilteredRows={preGlobalFilteredRows}\n                globalFilter={state.globalFilter}\n                setGlobalFilter={setGlobalFilter}\n              />\n            </th>\n          </tr>\n        </thead>\n        <div></div>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr class=\"bg-gray-800\" {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return <td class=\"p-3\" {...cell.getCellProps([\n                      {\n                        className: cell.column.className,\n                        style: cell.column.style,\n                      },\n                      getColumnProps(cell.column),\n                      getCellProps(cell),\n                    ])}>{cell.render('Cell')}</td>\n                })}\n              </tr>\n            )\n          })}\n        \n      \n      <tr>\n      <td colspan=\"4\" class=\"\">\n      <div class=\"p-3 justify-center\">\n        <button class=\"border border-teal-500 text-teal-500 rounded-sm font-semibold py-1 px-4 hover:bg-teal-500 hover:text-white disabled:opacity-50\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </button>{' '}\n        <button class=\"border border-teal-500 text-teal-500 rounded-sm font-semibold py-1 px-4 hover:bg-teal-500 hover:text-white disabled:opacity-50\" onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {'<'}\n        </button>{' '}\n        <button class=\"border border-teal-500 text-teal-500 rounded-sm font-semibold py-1 px-4 hover:bg-teal-500 hover:text-white disabled:opacity-50\" onClick={() => nextPage()} disabled={!canNextPage}>\n          {'>'}\n        </button>{' '}\n        <button class=\"border border-teal-500 text-teal-500 rounded-sm font-semibold py-1 px-4 hover:bg-teal-500 hover:text-white disabled:opacity-50\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n          {'>>'}\n        </button>{' '}\n        <span>\n          Page{' '}\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>{' '}\n        </span>\n        <span>\n          <span class=\"\">\n            | Go to page:{' '}\n            <input\n              class=\"border border-gray-800 focus:border-blue-500 rounded w-full py-1 px-3 mr-4 text-black\"\n              type=\"number\"\n              defaultValue={pageIndex + 1}\n              onChange={e => {\n                const page = e.target.value ? Number(e.target.value) - 1 : 0\n                gotoPage(page)\n              }}\n              style={{ width: '100px' }}\n            />\n          </span>{' '}\n        </span>\n      </div>\n      </td>\n      </tr>\n      </tbody>\n      </table>\n    </div>\n    </div>\n    </div>\n  )\n}\n\nfunction ranking({ value}) {\n  return <div class={value === 'A*' ? 'text-green-500' : (value === 'A' ? 'text-yellow-300' : (value === 'B' ? 'text-yellow-600' : 'text-red-800'))}> {value} </div>\n}\n\nfunction scopus({ value}) {\n  return <div class={value === 'True' ? 'text-green-400' : 'text-red-400'}> {value} </div>\n}\n\nfunction App() {\n  const columns = React.useMemo(\n    () => [\n          {\n            Header: 'Title',\n            accessor: 'Title',\n            className:'title',\n          },\n          {\n            Header: 'Publisher',\n            accessor: 'Publisher',\n            className:'publisher',\n          },        \n          {\n            Header: 'ABDC Ranking',\n            accessor: 'ABDC ranking',\n            Filter: SelectColumnFilter,\n            filter: 'equals',\n            className: 'ranking',\n            Cell: ranking,\n          },\n          {\n            Header: 'Scopus listed',\n            accessor: 'scopus',\n            Filter: SelectColumnFilter,\n            filter: 'includes',\n            className: 'scopus',\n            Cell: scopus,\n          }\n    ],\n    []\n  )\n\n  const data = React.useMemo(() => require('./data.json'), [])\n\n  return (\n    <Styles>\n      <Table\n        columns={columns}\n        data={data}\n      />\n    </Styles>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}